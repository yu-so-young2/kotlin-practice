package interface_example

interface Clickable {
    fun click()

    /**
     * <디폴트 메소드>
     * 인터페이스 메소드에 디폴트 구현을 제공할 수 있음.
     * 자바 8의 경우, 인터페이스 디폴트 메소드를 위해 앞에 default를 붙여야 하지만 코틀린에서는 그럴 필요가 없음.
     *
     * 코틀린은 자바 6과 호환되는데, 인터페이스의 디폴트 메서드는 자바 8에서 도입된 기능이므로, 인터페이스의 디폴트 메소드를 지원하지 않음.
     * 따라서 코틀린은 일반 인터페이스와 디폴트 메소드 구현이 정적 메소드로 들어가있는 클래스를 조합하여 구현함.
     * 이런 이유로 자바에서는 코틀린에서 디폴트 메서드를 구현한 방식을 인식하지 못하므로, 자바 클래스가 코틀린 인터페이스를 상속하려고 할 때는
     * 자바 클래스가 본인이 상속받은 인터페이스의 디폴트 메서드를 모두 다시 직접 오버라이딩하여 구현해야 함.
     * (즉, 자바에서는 코틀린의 디폴트 메소드 구현에 의존할 수 없고 다시 말해 코틀린 인터페이스의 디폴트 메소드를 호출할 수 없음)
     */

    /**
     * <상속 제어 변경자>
     * 인터페이스 멤버의 경우 final, open, abstract를 사용하지 않는다. 인터페이스 멤버는 항상 열려 있고, final로 변경할 수 없다.
     * 인터페이스 멤버에게 본문이 없다면 자동으로 추상 멤버가 되지만, 그렇더라도 따로 멤버 선언 앞에 abstract 키워드를 붙일 필요는 없다.
     */
    fun showOff() = println("I'm clickable!")
}